
public class MergeSort {
    





    public static void mergeSort(int nums[],int l ,int m, int h )
    {
        int n1= m-l+1;
        int n2=h-m;

        int left[]=new int[n1];
        int right[]=new int[n2];

        for(int i=0;i<n1;i++)
        {
            left[i]=nums[i+l];
        }
        for(int j=0;j<n2;j++)
        {
            right[j]=nums[m+1+j];
        }

        int i=0; int j=0;
        int k=1;
        while(i<n1 && j<n2)
        {
            if(left[i]<=right[j])
            {
                nums[k]=left[i];
                i++;
            }
            else{
                nums[k]=right[j];
                j++;
            }
            k++;
        }

        while(i<n1)
        {
            nums[k]=left[i];
            i++;
            k++;
        }
        while(j<n2)
        {
            nums[k]=right[j];
            j++;
            k++;
        }
}

public static void Sort(int nums[],int l ,int r)
{
    if(l<r)
    {
        int m=l+(r-l)/2;

        Sort(nums, l, m);
        Sort(nums, m+1, r);

        mergeSort(nums, l, m, r);
    }
}


    public static void print(int[] nums)
    {
        for(int i=0;i<nums.length;i++)
        {
            System.out.print(nums[i]+" ");
        }
    }

    public static void main(String[] args) {
        int nums[]={38,27,43,3,9,82,10};
        Sort(nums,0,nums.length-1);
        print(nums);
    }
}

